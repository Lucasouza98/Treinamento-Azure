{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-imersaobigdata-lucas"
		},
		"ls_azure_sqldatabase_powerquery_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_azure_sqldatabase_powerquery'"
		},
		"ls_http_api_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://api.nytimes.com/svc/movies/v2/"
		},
		"ls_key_vault_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://kv-imersaobigdata.vault.azure.net/"
		},
		"ls_azure_sqldatabase_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "kvstringconnsqldatabase"
		},
		"ls_csv_local_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "C:\\Users\\llsilva\\Desktop\\Cursos\\Treinamento_azure\\Aula 01\\02 - files_upload"
		},
		"ls_csv_local_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "SCCALPHA\\llsilva"
		},
		"ls_datalake_gen2_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://dlsimersaobigdata.dfs.core.windows.net"
		},
		"ls_sqllocal_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "kvstringconnsqllocal"
		},
		"TR-03_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/e1b4fc30-5958-4f94-b314-8d5664a0d531/resourceGroups/rg-imersaobigdata-turma03/providers/Microsoft.Storage/storageAccounts/dlsimersaobigdata"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/TR_SCHEDULE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "TRIGGER"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TR_STORAGE_EVENTS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "TRIGGER"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TR_TUMBLING_WINDOW')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "TRIGGER"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_azure_sqldatabase_powerquery')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "power query não aceita credencial oriunda do azure key vaults, exige a credencial por usuario e senha normal.",
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('ls_azure_sqldatabase_powerquery_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_http_api')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "conexão com apis https",
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('ls_http_api_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_key_vault')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "serviço vinculado do key vault.",
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('ls_key_vault_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Runtimeselfhosted')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"description": "runtime para conexão local",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_json_movies')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_http_api",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"token_api": {
						"type": "string",
						"defaultValue": "0O4zCEIRihWcSplcii4Zi04pnMdhMSZy"
					},
					"relative_url": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Treinamento-aula01"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "@concat(dataset().relative_url,'&api-key=',dataset().token_api)",
							"type": "Expression"
						}
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_http_api')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_azure_sqldatabase')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "ls_key_vault",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('ls_azure_sqldatabase_properties_typeProperties_connectionString_secretName')]"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_key_vault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_csv_local')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "[parameters('ls_csv_local_properties_typeProperties_host')]",
					"userId": "[parameters('ls_csv_local_properties_typeProperties_userId')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "ls_key_vault",
							"type": "LinkedServiceReference"
						},
						"secretName": "kvsenhausuariolocal"
					}
				},
				"connectVia": {
					"referenceName": "Runtimeselfhosted",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/Runtimeselfhosted')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_key_vault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_datalake_gen2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_datalake_gen2_properties_typeProperties_url')]",
					"accountKey": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "ls_key_vault",
							"type": "LinkedServiceReference"
						},
						"secretName": "kvkeydatalake"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_key_vault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_sqllocal')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "ls_key_vault",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('ls_sqllocal_properties_typeProperties_connectionString_secretName')]"
					}
				},
				"connectVia": {
					"referenceName": "Runtimeselfhosted",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/Runtimeselfhosted')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_key_vault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TR-03')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "essa trigger analisa o datalake, dispara quando ocorrer algo no data lake, exemplo uma carga no data lake, exemplo: arquivo .csv carregar ou ser deletado a trigger dispara",
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "TR_STORAGE_EVENTS",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/fileslucas/blobs/",
					"blobPathEndsWith": ".csv",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('TR-03_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated",
						"Microsoft.Storage.BlobDeleted"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/TR_STORAGE_EVENTS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TR_02')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "TUMBLING_WINDOW é uma janela de tempo exemplo, executa desde o dia 18 até hoje",
				"annotations": [],
				"runtimeState": "Started",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "TR_TUMBLING_WINDOW",
						"type": "PipelineReference"
					},
					"parameters": {}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Hour",
					"interval": 15,
					"startTime": "2022-03-18T00:00:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/TR_TUMBLING_WINDOW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/COPY_PROCEDURE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "sp_UPDATE_DATE_INSERT",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[SalesLT].[proc_activity_adf01_in]"
						},
						"linkedServiceName": {
							"referenceName": "ls_azure_sqldatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "sp_UPDATE_PRECO",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "sp_UPDATE_DATE_INSERT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[SalesLT].[proc_activity_adf02_in]",
							"storedProcedureParameters": {
								"preco": {
									"value": "45",
									"type": "Decimal"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_azure_sqldatabase",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PIPELINES_ACTIVITIES_23022"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_azure_sqldatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/COPY_SCRIPT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DROP_IF_EXISTS",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "ls_azure_sqldatabase",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "NonQuery",
									"text": "IF OBJECT_ID(N'SalesLT.TB_ADF_SCRIPT_ACTIVITY', N'U') IS NOT NULL  \n\nDROP TABLE [SalesLT].[TB_ADF_SCRIPT_ACTIVITY];"
								}
							]
						}
					},
					{
						"name": "SELECT_INTO",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "DROP_IF_EXISTS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "ls_azure_sqldatabase",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "NonQuery",
									"text": "Select * \ninto SalesLT.TB_ADF_SCRIPT_ACTIVITY\nfrom SalesLT.Customer"
								}
							]
						}
					},
					{
						"name": "SELECT_TABLE",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "SELECT_INTO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "ls_azure_sqldatabase",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "Select \n* \nFrom SalesLT.TB_ADF_SCRIPT_ACTIVITY"
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PIPELINES_ACTIVITIES_23022"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_azure_sqldatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/COPY_SELECT_FILTER')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SELECT_TABLE",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "ls_azure_sqldatabase",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "Select \n* \nFrom SalesLT.TB_ADF_SCRIPT_ACTIVITY"
								}
							]
						}
					},
					{
						"name": "Filter1",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "SELECT_TABLE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('SELECT_TABLE').output.resultSets[0]['rows']",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().customerID,10)",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PIPELINES_ACTIVITIES_23022"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_azure_sqldatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_fixo_cliente')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_azure_sqldatabase",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Treinamento-aula01"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CustomerID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "NameStyle",
						"type": "bit"
					},
					{
						"name": "Title",
						"type": "nvarchar"
					},
					{
						"name": "FirstName",
						"type": "nvarchar"
					},
					{
						"name": "MiddleName",
						"type": "nvarchar"
					},
					{
						"name": "LastName",
						"type": "nvarchar"
					},
					{
						"name": "Suffix",
						"type": "nvarchar"
					},
					{
						"name": "CompanyName",
						"type": "nvarchar"
					},
					{
						"name": "SalesPerson",
						"type": "nvarchar"
					},
					{
						"name": "EmailAddress",
						"type": "nvarchar"
					},
					{
						"name": "Phone",
						"type": "nvarchar"
					},
					{
						"name": "PasswordHash",
						"type": "varchar"
					},
					{
						"name": "PasswordSalt",
						"type": "varchar"
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "SalesLT",
					"table": "Customer"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_azure_sqldatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_fixo_pla_cor')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_csv_local",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Treinamento-aula01"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Plan1",
					"location": {
						"type": "FileServerLocation",
						"fileName": "plan_cor.xlsx"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "id",
						"type": "String"
					},
					{
						"name": "cor",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_csv_local')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_generico_azuresql')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_azure_sqldatabase",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"schema_name": {
						"type": "string"
					},
					"table_name": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Treinamento-aula01"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().schema_name",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().table_name",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_azure_sqldatabase')]"
			]
		}
	]
}