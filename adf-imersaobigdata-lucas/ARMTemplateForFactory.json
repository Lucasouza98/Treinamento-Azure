{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-imersaobigdata-lucas"
		},
		"ls_azure_sqldatabase_powerquery_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_azure_sqldatabase_powerquery'"
		},
		"ls_azure_sqldatabase_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "kvstringconnsqldatabase"
		},
		"ls_csv_local_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "C:\\Users\\llsilva\\Desktop\\Cursos\\Treinamento_azure\\Aula 01\\02 - files_upload"
		},
		"ls_csv_local_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "SCCALPHA\\llsilva"
		},
		"ls_datalake_gen2_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://dlsimersaobigdata.dfs.core.windows.net"
		},
		"ls_http_api_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://api.nytimes.com/svc/movies/v2/"
		},
		"ls_key_vault_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://kv-imersaobigdata.vault.azure.net/"
		},
		"ls_sqllocal_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "kvstringconnsqllocal"
		},
		"TR-03_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/e1b4fc30-5958-4f94-b314-8d5664a0d531/resourceGroups/rg-imersaobigdata-turma03/providers/Microsoft.Storage/storageAccounts/dlsimersaobigdata"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/COPY_API')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "API_TO_DATALAKE",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ds_json_movies",
								"type": "DatasetReference",
								"parameters": {
									"token_api": "0O4zCEIRihWcSplcii4Zi04pnMdhMSZy",
									"relative_url": "critics/all.json?"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_json_api_saida",
								"type": "DatasetReference",
								"parameters": {
									"container_name": "trusted",
									"file_name": "criticas_filmes.json"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PIPELINES_ACTIVITIES_23022"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_json_movies')]",
				"[concat(variables('factoryId'), '/datasets/ds_json_api_saida')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/COPY_COPY_DATA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "XLSX_LOCAL_TO_LAKE",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_fixo_pla_cor",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_generico_azuresql",
								"type": "DatasetReference",
								"parameters": {
									"schema_name": "SalesLT",
									"table_name": "Plan_cor"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PIPELINES_ACTIVITIES_23022"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_fixo_pla_cor')]",
				"[concat(variables('factoryId'), '/datasets/ds_generico_azuresql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/COPY_COPY_DATA_2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SQL_TO_SQL",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"id"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_generico_azuresql",
								"type": "DatasetReference",
								"parameters": {
									"schema_name": "SalesLT",
									"table_name": "TB_ADF_COPY_SOURCE"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_generico_azuresql",
								"type": "DatasetReference",
								"parameters": {
									"schema_name": "SalesLT",
									"table_name": "TB_ADF_COPY_TARGET"
								}
							}
						]
					},
					{
						"name": "SQL_TO_DATALAKE",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "SQL_TO_SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT* FROM [SalesLT].[TB_ADF_COPY_TARGET]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_generico_azuresql",
								"type": "DatasetReference",
								"parameters": {
									"schema_name": "*",
									"table_name": "*"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_generico_delimited_text_2",
								"type": "DatasetReference",
								"parameters": {
									"container_name": "fileslucas",
									"file_name": {
										"value": "@concat('COPY_TARGET_',utcnow('ddMMyyhhmm'),'.csv')",
										"type": "Expression"
									},
									"separator_name": ";"
								}
							}
						]
					},
					{
						"name": "SQLLOCAL_TO_DATALAKE",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"additionalColumns": [
									{
										"name": "DT_INSERCAO",
										"value": {
											"value": "@formatDateTime(utcNow(),'ddMMyyyy')",
											"type": "Expression"
										}
									}
								],
								"sqlReaderQuery": "SELECT [COD_LOCAL]\n      ,[NOME]\n      ,[CIDADE]\n      ,[BAIRRO]\n      ,[ESTADO]\n  FROM [BD_EVENTOS_IMERSAO].[IMERSAO].[LOCALIZACAO]\n  WHERE ESTADO = 'PE'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_generico_sqllocal",
								"type": "DatasetReference",
								"parameters": {
									"schema_name": "*",
									"table_name": "*"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_generico_delimited_text_2",
								"type": "DatasetReference",
								"parameters": {
									"container_name": "fileslucas",
									"file_name": {
										"value": "@concat('localizacao_',utcnow('ddMMyyhhmm'),'.csv')",
										"type": "Expression"
									},
									"separator_name": ";"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PIPELINES_ACTIVITIES_23022"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_generico_azuresql')]",
				"[concat(variables('factoryId'), '/datasets/ds_generico_delimited_text_2')]",
				"[concat(variables('factoryId'), '/datasets/ds_generico_sqllocal')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/COPY_GETMETADATA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata File",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Get Metadata File_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_generico_delimited_text",
								"type": "DatasetReference",
								"parameters": {
									"container_name": "fileslucas",
									"directory_name": "@toLower('')",
									"file_name": "moviesDB.csv",
									"separator_name": ","
								}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Get Metadata Folder",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Get Metadata File",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_generico_delimited_text",
								"type": "DatasetReference",
								"parameters": {
									"container_name": "fileslucas",
									"directory_name": {
										"value": "@toLower('')",
										"type": "Expression"
									},
									"file_name": "@toLower('')",
									"separator_name": "@toLower('')"
								}
							},
							"fieldList": [
								"itemType"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Get Metadata Table",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Get Metadata Folder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_generico_azuresql",
								"type": "DatasetReference",
								"parameters": {
									"schema_name": "SalesLT",
									"table_name": "Plan_cor"
								}
							},
							"fieldList": [
								"structure"
							]
						}
					},
					{
						"name": "Get Metadata File_2",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_generico_delimited_text_2",
								"type": "DatasetReference",
								"parameters": {
									"container_name": "fileslucas",
									"file_name": "cidades.csv",
									"separator_name": ";"
								}
							},
							"fieldList": [
								"itemName"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PIPELINES_ACTIVITIES_23022"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_generico_delimited_text')]",
				"[concat(variables('factoryId'), '/datasets/ds_generico_azuresql')]",
				"[concat(variables('factoryId'), '/datasets/ds_generico_delimited_text_2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/COPY_GETMETADATA_FOREACH_FILTER')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata Folder",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_generico_delimited_text",
								"type": "DatasetReference",
								"parameters": {
									"container_name": "fileslucas",
									"directory_name": {
										"value": "@toLower('')",
										"type": "Expression"
									},
									"file_name": "@toLower('')",
									"separator_name": "@toLower('')"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Filter txt",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get Metadata Folder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata Folder').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'.txt')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach parquet",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter txt",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter txt').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "TXT_TO_PARQUET",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_generico_delimited_text_2",
											"type": "DatasetReference",
											"parameters": {
												"container_name": "fileslucas",
												"file_name": {
													"value": "@item().name",
													"type": "Expression"
												},
												"separator_name": ";"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_generico_parquet",
											"type": "DatasetReference",
											"parameters": {
												"container_name": "trusted",
												"file_name": {
													"value": "@replace(item().name,'.txt','.parquet')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PIPELINES_ACTIVITIES_23022"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_generico_delimited_text')]",
				"[concat(variables('factoryId'), '/datasets/ds_generico_delimited_text_2')]",
				"[concat(variables('factoryId'), '/datasets/ds_generico_parquet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/COPY_LOOKUP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup Controller",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "ds_generico_delimited_text",
								"type": "DatasetReference",
								"parameters": {
									"container_name": "fileslucas",
									"directory_name": "controller",
									"file_name": "controller_tables.csv",
									"separator_name": ";"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Lookup CSV Singleton",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup Controller",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "ds_generico_delimited_text_2",
								"type": "DatasetReference",
								"parameters": {
									"container_name": "fileslucas",
									"file_name": "cidades.csv",
									"separator_name": ";"
								}
							}
						}
					},
					{
						"name": "Lookup Table Singleton",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup CSV Singleton",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_generico_azuresql",
								"type": "DatasetReference",
								"parameters": {
									"schema_name": "SalesLT",
									"table_name": "Plan_cor"
								}
							}
						}
					},
					{
						"name": "Lookup CSV Array",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup Table Singleton",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "ds_generico_delimited_text_2",
								"type": "DatasetReference",
								"parameters": {
									"container_name": "fileslucas",
									"file_name": "cidades.csv",
									"separator_name": ";"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Lookup Table Array",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup CSV Array",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_generico_azuresql",
								"type": "DatasetReference",
								"parameters": {
									"schema_name": "SalesLT",
									"table_name": "Plan_cor"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Lookup Table Array Query",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup Table Array",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT TABLE_SCHEMA, TABLE_NAME\nFROM INFORMATION_SCHEMA.TABLES \n  WHERE TABLE_TYPE='BASE TABLE'\n  and TABLE_SCHEMA = 'SalesLT'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_generico_azuresql",
								"type": "DatasetReference",
								"parameters": {
									"schema_name": "*",
									"table_name": "*"
								}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PIPELINES_ACTIVITIES_23022"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_generico_delimited_text')]",
				"[concat(variables('factoryId'), '/datasets/ds_generico_delimited_text_2')]",
				"[concat(variables('factoryId'), '/datasets/ds_generico_azuresql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/COPY_LOOKUPCONTROLLER_FILTER_FOREACH')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup Controller",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "ds_generico_delimited_text",
								"type": "DatasetReference",
								"parameters": {
									"container_name": "fileslucas",
									"directory_name": "controller",
									"file_name": "controller_tables.csv",
									"separator_name": ";"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Filter load table 1",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Lookup Controller",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup Controller').output.value",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().load_table,'1')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter load table 1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter load table 1').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "SQLLOCAL_TO_LAKE",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_generico_sqllocal",
											"type": "DatasetReference",
											"parameters": {
												"schema_name": {
													"value": "@item().schema_source\n",
													"type": "Expression"
												},
												"table_name": {
													"value": "@item().table_source",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_generico_delimited_text_2",
											"type": "DatasetReference",
											"parameters": {
												"container_name": {
													"value": "@item().container_target",
													"type": "Expression"
												},
												"file_name": {
													"value": "@concat(item().file_target,'.csv')",
													"type": "Expression"
												},
												"separator_name": ";"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PIPELINES_ACTIVITIES_23022"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_generico_delimited_text')]",
				"[concat(variables('factoryId'), '/datasets/ds_generico_sqllocal')]",
				"[concat(variables('factoryId'), '/datasets/ds_generico_delimited_text_2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/COPY_PROCEDURE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "sp_UPDATE_DATE_INSERT",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[SalesLT].[proc_activity_adf01_in]"
						},
						"linkedServiceName": {
							"referenceName": "ls_azure_sqldatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "sp_UPDATE_PRECO",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "sp_UPDATE_DATE_INSERT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[SalesLT].[proc_activity_adf02_in]",
							"storedProcedureParameters": {
								"preco": {
									"value": "45",
									"type": "Decimal"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_azure_sqldatabase",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PIPELINES_ACTIVITIES_23022"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_azure_sqldatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/COPY_SCRIPT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DROP_IF_EXISTS",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "ls_azure_sqldatabase",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "NonQuery",
									"text": "IF OBJECT_ID(N'SalesLT.TB_ADF_SCRIPT_ACTIVITY', N'U') IS NOT NULL  \n\nDROP TABLE [SalesLT].[TB_ADF_SCRIPT_ACTIVITY];"
								}
							]
						}
					},
					{
						"name": "SELECT_INTO",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "DROP_IF_EXISTS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "ls_azure_sqldatabase",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "NonQuery",
									"text": "Select * \ninto SalesLT.TB_ADF_SCRIPT_ACTIVITY\nfrom SalesLT.Customer"
								}
							]
						}
					},
					{
						"name": "SELECT_TABLE",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "SELECT_INTO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "ls_azure_sqldatabase",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "Select \n* \nFrom SalesLT.TB_ADF_SCRIPT_ACTIVITY"
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PIPELINES_ACTIVITIES_23022"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_azure_sqldatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/COPY_SELECT_FILTER')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SELECT_TABLE",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "ls_azure_sqldatabase",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "Select \n* \nFrom SalesLT.TB_ADF_SCRIPT_ACTIVITY"
								}
							]
						}
					},
					{
						"name": "Filter1",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "SELECT_TABLE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('SELECT_TABLE').output.resultSets[0]['rows']",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().customerID,10)",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PIPELINES_ACTIVITIES_23022"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_azure_sqldatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ETL_DATAFLOW')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "EXEC FLOW",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DATAFLOW_ARTISTA",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"artista": {
										"container_name": "bronze",
										"file_name": "ARTISTA.csv",
										"separator_name": ";"
									},
									"eventoartista": {
										"container_name": "bronze",
										"file_name": "EVENTO_ARTISTA.csv",
										"separator_name": ";"
									},
									"saidaazure": {
										"schema_name": "SalesLT",
										"table_name": "tb_faturamento_positivo"
									},
									"saidaparquet": {
										"container_name": "trusted"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "None",
							"cacheSinks": {
								"firstRowOnly": true
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PIPELINES_ACTIVITIES_23022"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DATAFLOW_ARTISTA')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ORQUESTRADOR')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "COPY_GETMETADATA",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "COPY_GETMETADATA",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "COPY_LOOKUP",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "COPY_GETMETADATA",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "COPY_LOOKUP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PIPELINES_ACTIVITIES_23022"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/COPY_GETMETADATA')]",
				"[concat(variables('factoryId'), '/pipelines/COPY_LOOKUP')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TR_SCHEDULE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "TRIGGER"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TR_STORAGE_EVENTS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "TRIGGER"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TR_TUMBLING_WINDOW')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "TRIGGER"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_fixo_cliente')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_azure_sqldatabase",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Treinamento-aula01"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CustomerID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "NameStyle",
						"type": "bit"
					},
					{
						"name": "Title",
						"type": "nvarchar"
					},
					{
						"name": "FirstName",
						"type": "nvarchar"
					},
					{
						"name": "MiddleName",
						"type": "nvarchar"
					},
					{
						"name": "LastName",
						"type": "nvarchar"
					},
					{
						"name": "Suffix",
						"type": "nvarchar"
					},
					{
						"name": "CompanyName",
						"type": "nvarchar"
					},
					{
						"name": "SalesPerson",
						"type": "nvarchar"
					},
					{
						"name": "EmailAddress",
						"type": "nvarchar"
					},
					{
						"name": "Phone",
						"type": "nvarchar"
					},
					{
						"name": "PasswordHash",
						"type": "varchar"
					},
					{
						"name": "PasswordSalt",
						"type": "varchar"
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "SalesLT",
					"table": "Customer"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_azure_sqldatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_fixo_pla_cor')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_csv_local",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Treinamento-aula01"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Plan1",
					"location": {
						"type": "FileServerLocation",
						"fileName": "plan_cor.xlsx"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "id",
						"type": "String"
					},
					{
						"name": "cor",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_csv_local')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_generico_azuresql')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_azure_sqldatabase",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"schema_name": {
						"type": "string"
					},
					"table_name": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Treinamento-aula01"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().schema_name",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().table_name",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_azure_sqldatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_generico_delimited_text')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_datalake_gen2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"container_name": {
						"type": "string"
					},
					"directory_name": {
						"type": "string"
					},
					"file_name": {
						"type": "string"
					},
					"separator_name": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Treinamento-aula01"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().file_name",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().directory_name",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().container_name",
							"type": "Expression"
						}
					},
					"columnDelimiter": {
						"value": "@dataset().separator_name",
						"type": "Expression"
					},
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_datalake_gen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_generico_delimited_text_2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_datalake_gen2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"container_name": {
						"type": "string"
					},
					"file_name": {
						"type": "string"
					},
					"separator_name": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Treinamento-aula01"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().file_name",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().container_name",
							"type": "Expression"
						}
					},
					"columnDelimiter": {
						"value": "@dataset().separator_name",
						"type": "Expression"
					},
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_datalake_gen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_generico_parquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_datalake_gen2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"container_name": {
						"type": "string"
					},
					"file_name": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Treinamento-aula01"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().file_name",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().container_name",
							"type": "Expression"
						}
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_datalake_gen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_generico_parquet_dataflow')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_datalake_gen2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"container_name": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Treinamento-aula01"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": {
							"value": "@dataset().container_name",
							"type": "Expression"
						}
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_datalake_gen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_generico_sqllocal')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sqllocal",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"schema_name": {
						"type": "string"
					},
					"table_name": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Treinamento-aula01"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().schema_name",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().table_name",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sqllocal')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_json_api_saida')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_datalake_gen2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"container_name": {
						"type": "string"
					},
					"file_name": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Treinamento-aula01"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().file_name",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().container_name",
							"type": "Expression"
						}
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_datalake_gen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_json_movies')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_http_api",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"token_api": {
						"type": "string",
						"defaultValue": "0O4zCEIRihWcSplcii4Zi04pnMdhMSZy"
					},
					"relative_url": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Treinamento-aula01"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "@concat(dataset().relative_url,'&api-key=',dataset().token_api)",
							"type": "Expression"
						}
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_http_api')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_azure_sqldatabase')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "ls_key_vault",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('ls_azure_sqldatabase_properties_typeProperties_connectionString_secretName')]"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_key_vault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_azure_sqldatabase_powerquery')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "power query não aceita credencial oriunda do azure key vaults, exige a credencial por usuario e senha normal.",
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('ls_azure_sqldatabase_powerquery_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_csv_local')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "[parameters('ls_csv_local_properties_typeProperties_host')]",
					"userId": "[parameters('ls_csv_local_properties_typeProperties_userId')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "ls_key_vault",
							"type": "LinkedServiceReference"
						},
						"secretName": "kvsenhausuariolocal"
					}
				},
				"connectVia": {
					"referenceName": "Runtimeselfhosted",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/Runtimeselfhosted')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_key_vault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_datalake_gen2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_datalake_gen2_properties_typeProperties_url')]",
					"accountKey": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "ls_key_vault",
							"type": "LinkedServiceReference"
						},
						"secretName": "kvkeydatalake"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_key_vault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_http_api')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "conexão com apis https",
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('ls_http_api_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_key_vault')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "serviço vinculado do key vault.",
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('ls_key_vault_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_sqllocal')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "ls_key_vault",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('ls_sqllocal_properties_typeProperties_connectionString_secretName')]"
					}
				},
				"connectVia": {
					"referenceName": "Runtimeselfhosted",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/Runtimeselfhosted')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_key_vault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TR-03')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "essa trigger analisa o datalake, dispara quando ocorrer algo no data lake, exemplo uma carga no data lake, exemplo: arquivo .csv carregar ou ser deletado a trigger dispara",
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "TR_STORAGE_EVENTS",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/fileslucas/blobs/",
					"blobPathEndsWith": ".csv",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('TR-03_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated",
						"Microsoft.Storage.BlobDeleted"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/TR_STORAGE_EVENTS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TR_01')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "TRIGGER DE SCHEDULE - CALENDÁRIO",
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "TR_SCHEDULE",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2022-03-26T18:15:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/TR_SCHEDULE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TR_02')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "TUMBLING_WINDOW é uma janela de tempo exemplo, executa desde o dia 18 até hoje",
				"annotations": [],
				"runtimeState": "Started",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "TR_TUMBLING_WINDOW",
						"type": "PipelineReference"
					},
					"parameters": {}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Hour",
					"interval": 15,
					"startTime": "2022-03-18T00:00:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/TR_TUMBLING_WINDOW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Runtimeselfhosted')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"description": "runtime para conexão local",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DATAFLOW_ARTISTA')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "DATA_FLOW_2302"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_generico_delimited_text_2",
								"type": "DatasetReference"
							},
							"name": "artista"
						},
						{
							"dataset": {
								"referenceName": "ds_generico_delimited_text_2",
								"type": "DatasetReference"
							},
							"name": "eventoartista"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_generico_azuresql",
								"type": "DatasetReference"
							},
							"name": "saidaazure"
						},
						{
							"dataset": {
								"referenceName": "ds_generico_parquet_dataflow",
								"type": "DatasetReference"
							},
							"name": "saidaparquet"
						}
					],
					"transformations": [
						{
							"name": "renomearcolunasartista"
						},
						{
							"name": "renomearcolunasea"
						},
						{
							"name": "colunacalculadaea"
						},
						{
							"name": "joinartistaeventoartista"
						},
						{
							"name": "agrupamento"
						},
						{
							"name": "condicao"
						}
					],
					"scriptLines": [
						"source(output(",
						"          COD_ARTISTA as short,",
						"          CPF as long,",
						"          NOME as string,",
						"          COD_ESTILO as short",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> artista",
						"source(output(",
						"          CODIGO as short,",
						"          VALOR_PGTO as double,",
						"          DT_PGTO as string,",
						"          FKCOD_ARTISTA as short,",
						"          FKCOD_EVENTO as short",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> eventoartista",
						"artista select(mapColumn(",
						"          COD_ARTISTA,",
						"          NOME,",
						"          COD_ESTILO",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> renomearcolunasartista",
						"eventoartista select(mapColumn(",
						"          EA_CODIGO = CODIGO,",
						"          EA_VALOR_PGTO = VALOR_PGTO,",
						"          EA_DT_PGTO = DT_PGTO,",
						"          EA_FKCOD_ARTISTA = FKCOD_ARTISTA,",
						"          EA_FKCOD_EVENTO = FKCOD_EVENTO",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> renomearcolunasea",
						"renomearcolunasea derive(codigo_x_valor_pgto = EA_CODIGO*EA_VALOR_PGTO) ~> colunacalculadaea",
						"renomearcolunasartista, colunacalculadaea join(COD_ARTISTA == EA_FKCOD_ARTISTA,",
						"     joinType:'left',",
						"     broadcast: 'auto')~> joinartistaeventoartista",
						"joinartistaeventoartista aggregate(groupBy(NOME),",
						"     faturamento_total = sum(EA_VALOR_PGTO)) ~> agrupamento",
						"agrupamento split(faturamento_total > 100000,",
						"     disjoint: false) ~> condicao@(saidasqllocal, saidaparquet)",
						"condicao@saidasqllocal sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> saidaazure",
						"condicao@saidaparquet sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     partitionFileNames:['tb_faturamento_negativo.parquet'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> saidaparquet"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_generico_delimited_text_2')]",
				"[concat(variables('factoryId'), '/datasets/ds_generico_azuresql')]",
				"[concat(variables('factoryId'), '/datasets/ds_generico_parquet_dataflow')]"
			]
		}
	]
}